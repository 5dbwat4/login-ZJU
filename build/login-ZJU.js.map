{
  "version": 3,
  "sources": ["../src/utils/fetch-with-cookie.ts", "../src/courses.ts", "../src/zdbk.ts", "../src/utils/fetch-utils.ts", "../src/utils/RSA.ts", "../src/zjuam.ts", "../src/course.ts", "../src/form.ts", "../src/classroom.ts"],
  "sourcesContent": ["let Cookie_pool : Record<string, Record<string, string>> = {};\r\nfunction fetchWithCookie(url: string, options: RequestInit): Promise<Response> {\r\n  const host = new URL(url).host;\r\n  Cookie_pool[host] = Cookie_pool[host] || {};\r\n  if (Cookie_pool[host]) {\r\n    options.headers = {\r\n      Cookie: Object.entries(Cookie_pool[host])\r\n        .map(([key, value]) => `${key}=${value}`)\r\n        .join(\"; \"),\r\n    };\r\n  }\r\n  options.redirect = \"manual\";\r\n  return fetch(url, options).then((response) => {\r\n    if (response.headers.get(\"set-cookie\")) {\r\n      response.headers.getSetCookie().forEach((cookie) => {\r\n        const [key, value] = cookie.split(\"=\");\r\n        Cookie_pool[host][key] = value;\r\n      });\r\n    }\r\n    return response;\r\n  });\r\n}\r\n\r\nfunction extractCookie(host: string): Record<string, string> {\r\n    return Cookie_pool[host] || {};\r\n}\r\n\r\nexport default fetchWithCookie;", "import fetchWithCookie from \"./utils/fetch-with-cookie\";\r\nimport type { ZJUAM } from \"./zjuam\";\r\n\r\nclass COURSES {\r\n  zjuamInstance: ZJUAM;\r\n  // cookies: { [key: string]: string };\r\n  session: string=\"\";\r\n  firstTime: boolean = true;\r\n  constructor(am: ZJUAM) {\r\n    this.zjuamInstance = am;\r\n    // this.cookies = {};\r\n  }\r\n\r\n  async login() {\r\n    console.log(\"[COURSES] login begins\");\r\n    \r\n    return fetchWithCookie(\"https://courses.zju.edu.cn/user/index\", {\r\n        redirect: \"manual\",\r\n      })\r\n      .then((res) => {\r\n        // console.log(res.status);\r\n        // console.log(res.headers.getSetCookie());\r\n        // console.log(res.headers.get(\"Location\"));\r\n        if (res.status == 302) {\r\n          return fetchWithCookie(res.headers.get(\"Location\")!, {//something like https://identity.zju.edu.cn/auth/realms/zju/protocol/cas/login?ui_locales=zh-CN&service=https%3A//courses.zju.edu.cn/user/index&locale=zh_CN&ts=1733590703.188173\r\n            redirect: \"manual\",\r\n          });\r\n        } else {\r\n          throw new Error(\"Fail at first load.\");\r\n        }\r\n      })\r\n      .then((res) => {\r\n        // console.log(res.status);\r\n        // console.log(res.headers.getSetCookie());\r\n        // console.log(res.headers.get(\"Location\"));\r\n        if (res.status == 303) {\r\n          return fetchWithCookie(res.headers.get(\"Location\")!, {// something like https://identity.zju.edu.cn/auth/realms/zju/broker/cas-client/login?session_code=wWtmnw71c1-D_TPo_MSPJrAKgVqEjlqjs9mmChLt4Bs&client_id=TronClass&tab_id=qpB9in-Du-c\r\n             \r\n            redirect: \"manual\",\r\n          });\r\n        } else {\r\n          throw new Error(\"Fail at first load.\");\r\n        }\r\n      })\r\n      .then(async (res) => {\r\n        // console.log(res.status);\r\n        // console.log(res.headers.getSetCookie());\r\n        // console.log(res.headers.get(\"Location\"));\r\n        if(res.status == 303){\r\n          const callbackUrl = await this.zjuamInstance.loginSvc(decodeURIComponent(res.headers.get(\"Location\")!.replace(\"https://zjuam.zju.edu.cn/cas/login?service=\",\"\")));\r\n          return fetchWithCookie(callbackUrl, {\r\n            redirect: \"manual\",\r\n          });\r\n        }else{\r\n          throw new Error(\"Fail at first load.\");\r\n        }\r\n      })\r\n      .then((res) => {\r\n        // console.log(res.status);\r\n        // console.log(res.headers.getSetCookie());\r\n        // console.log(res.headers.get(\"Location\"));\r\n        if (res.status == 302) {\r\n          return fetchWithCookie(res.headers.get(\"Location\")!, { // something like https://courses.zju.edu.cn/user/index?ticket=\r\n            redirect: \"manual\",\r\n          });\r\n        } else {\r\n          throw new Error(\"Fail at second load.\");\r\n        }\r\n      })\r\n      .then((res) => {\r\n        // console.log(res.status);\r\n        // console.log(res.headers.getSetCookie());\r\n        // console.log(res.headers.get(\"Location\"));\r\n        if (res.status == 302) { // Here we are to : https://courses.zju.edu.cn/user/index\r\n          console.log(\"[COURSES] Login success!\");\r\n          // this.cookies = res.headers.getSetCookie();\r\n          this.session = res.headers.get(\"Set-Cookie\")!.split(\";\")[0].split(\"=\")[1];\r\n          // console.log(this.session);\r\n          \r\n          return true;\r\n        } else {\r\n          throw new Error(\"Fail at login.\");\r\n        }\r\n      })\r\n\r\n  }\r\n\r\n  async fetch(url: string, options: any = {}): Promise<Response> {\r\n    if (this.firstTime) {\r\n      await this.login();\r\n      this.firstTime = false;\r\n    }\r\n    // console.log(\"Login finished.\",this.firstTime,this.session);\r\n\r\n    console.log(\"[COURSES] Fetching url:\", url);\r\n    \r\n    \r\n    options.headers = {\r\n      ...options?.headers,\r\n      \"Cookie\": \"session=\" + this.session+\";\",\r\n      \"X-Session-Id\": this.session,\r\n    };\r\n    return fetch(url, options).then(res=>{\r\n      // console.log(res.status);\r\n      // console.log(res.headers);\r\n      // console.log(res.headers.get(\"Location\"));\r\n      //Update session\r\n      if(res.headers.get(\"Set-Cookie\")){\r\n        //IMPORTANT NOTE: Here we assume that the session is the first cookie in the Set-Cookie header.  \r\n        const session = res.headers.get(\"Set-Cookie\")!.split(\";\")[0].split(\"=\")[1];\r\n        if(session!== this.session){\r\n          this.session = session;\r\n          // console.log(\"Session updated:\",this.session);\r\n        }\r\n      }\r\n      return res;\r\n    });\r\n\r\n  }\r\n}\r\n\r\nexport { COURSES };\r\n", "\r\nimport type { ZJUAM } from \"./zjuam\";\r\n\r\nclass ZDBK {\r\n  // the only used Cookie is \"JSESSIONPREJSDM\" and \"route\".\r\n\r\n  zjuamInstance: ZJUAM;\r\n  cookies: { [key: string]: string };\r\n  constructor(am: ZJUAM) {\r\n    this.zjuamInstance = am;\r\n    this.cookies = {};\r\n  }\r\n  async login() {\r\n    const callbackURL = await this.zjuamInstance.loginSvc(\r\n      \"http://zdbk.zju.edu.cn/jwglxt/xtgl/login_ssologin.html\"\r\n    );\r\n\r\n    // console.log(\"callback:\",callbackURL);\r\n\r\n    // It is OK to call it directly.\r\n    fetch(callbackURL, {\r\n      redirect: \"manual\",\r\n    }).then((res) => {\r\n    //   console.log(res.status);\r\n    //   console.log(res.headers.getSetCookie());\r\n      res.headers.getSetCookie().forEach((cookieStr) => {\r\n        if(cookieStr.includes(\"Path=/javajw;\"))return;\r\n        const [key, value] = cookieStr.split(\";\")[0].split(\"=\");\r\n        this.cookies[key] = value;\r\n      });\r\n    //   console.log(this.cookies);\r\n      \r\n\r\n      if (\r\n        res.status == 302 &&\r\n        res.headers\r\n          .get(\"Location\")\r\n          ?.includes(\"http://zdbk.zju.edu.cn/jwglxt/xtgl/index_initMenu.html\")\r\n      ) {\r\n        fetch(res.headers.get(\"Location\")!, {\r\n          redirect: \"manual\",\r\n          headers: {\r\n            Cookie: Object.entries(this.cookies)\r\n              .map(([key, value]) => `${key}=${value}`)\r\n              .join(\"; \"),\r\n          },\r\n        }).then((res) => {\r\n            res.headers.getSetCookie().forEach((cookieStr) => {\r\n                const [key, value] = cookieStr.split(\";\")[0].split(\"=\");\r\n                this.cookies[key] = value;\r\n              });\r\n        //   console.log(res.status);\r\n        //   console.log(res.headers);\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport { ZDBK };\r\n", "/**\r\n * A node module that automatically handles cookies\r\n * @returns {Object} fetch: a fetch function that automatically handles cookies, extractCookie: a function that extracts a cookie from the cookie pool\r\n */\r\nfunction createFetchSession(): Promise<{\r\n  fetch: (url: string, options?: RequestInit) => Promise<Response>;\r\n  extractCookie: (origin: string, cookieName: string) => string;\r\n  injectCookie: (origin: string, cookieName: string, cookie: string) => void;\r\n}> {\r\n  // It handles cookies automatically\r\n  let cookiePool: Record<string, Record<string, string>> = {};\r\n  return new Promise((resolve) => {\r\n    resolve({\r\n      fetch: async (url: string, options?: RequestInit) => {\r\n        const origin = new URL(url).origin;\r\n        return fetch(url, {\r\n          ...options,\r\n          headers: {\r\n            \"User-Agent\":\r\n            \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36 Edg/131.0.0.0\",\r\n            \"Accept-Language\": \"zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6\",\r\n            ...options?.headers,\r\n            \r\n            cookie: Object.entries(cookiePool[origin] || {})\r\n            .map(([key, value]) => `${key}=${value}`)\r\n            .join(\"; \"),\r\n          },\r\n        }).then(async (res) => {\r\n            // console.log(`[session-fetch] Fetch ${url} with cookies`,cookiePool[origin],` and status ${res.status} and received cookies`,res.headers.getSetCookie());\r\n            // console.log(\"[Sessioned fetch] Fetch \",url);\r\n            \r\n            \r\n          res.headers.getSetCookie().forEach((cookie: string) => {\r\n            let [cookieName,cookieValue] = cookie.split(\";\")[0].split(\"=\");\r\n            cookiePool[origin] = cookiePool[origin] || {};\r\n            cookiePool[origin][cookieName] = cookieValue;\r\n          });\r\n        \r\n            \r\n          return res;\r\n        });\r\n      },\r\n      extractCookie: (origin: string, cookieName: string) => {\r\n        return cookiePool[origin][cookieName] || \"\";\r\n      },\r\n      injectCookie: (origin: string, cookieName: string, cookie: string) => {\r\n        cookiePool[origin] = cookiePool[origin] || {};\r\n        cookiePool[origin][cookieName] = cookie;\r\n        return;\r\n      },\r\n    });\r\n  });\r\n}\r\n\r\nexport { createFetchSession };\r\n", "function rsaEncrypt(passwd: string, exponent: string, nHex: string): string {\r\n    let pwd = 0n;\r\n    for (const c of passwd) {\r\n        pwd = pwd * 256n + BigInt(c.charCodeAt(0));\r\n    }\r\n    const n = BigInt(\"0x\" + nHex);\r\n    const e = BigInt(\"0x\" + exponent);// \u7B11\u70B9\u89E3\u6790\uFF1A\u4E00\u5F00\u59CB\u4EE5\u4E3A10001\u662F\u5341\u8FDB\u5236\uFF0C\u8C03\u534A\u5929\u8C03\u4E0D\u5BF9\r\n    const crypt = (pwd ** e) % n;\r\n    // let crypt = 1n;\r\n    // let base = pwd % n;\r\n    // for (let i = 0n; i < e; i++) {\r\n    //     crypt = (crypt * base) % n;\r\n    //     base = (base * base) % n; \r\n    // } \r\n    const ciphertextHex = crypt.toString(16);\r\n    return ciphertextHex;\r\n}\r\nexport { rsaEncrypt };", "import { createFetchSession } from \"./utils/fetch-utils\";\r\nimport { rsaEncrypt } from \"./utils/RSA\";\r\n\r\nconst pubkey_url = \"https://zjuam.zju.edu.cn/cas/v2/getPubKey\";\r\n\r\n// const login_url = \"https://zjuam.zju.edu.cn/cas/login\";\r\n\r\nasync function login_to_zjuam(username: string, password: string) {\r\n  const pubkey = (await fetch(pubkey_url).then((res) => res.json())) as {\r\n    modulus: string; // hex\r\n    exponent: string;\r\n  };\r\n  // Encrypt password using node crypto\r\n  // var key = new RSAUtils.getKeyPair(pubkey.exponent, \"\", pubkey.modulus);\r\n  const key = rsaEncrypt(password, pubkey.exponent, pubkey.modulus);\r\n}\r\n\r\nclass ZJUAM {\r\n  username: string;\r\n  password: string;\r\n  // cookies: { [key: string]: string };\r\n  iPlanetDirectoryPro: string;\r\n  firstinLogin: boolean = true;\r\n\r\n  constructor(username: string, password: string) {\r\n    this.username = username;\r\n    this.password = password;\r\n    this.iPlanetDirectoryPro = \"\";\r\n    // this.cookies = {};\r\n    // this.login();\r\n  }\r\n  #_login(login_url: string): Promise<string> {\r\n    console.log(\"[ZJUAM] Attempting to login to ZJUAM.\");\r\n\r\n    return new Promise(async (resolve, reject) => {\r\n      //get execution\r\n      // const that=this;\r\n      createFetchSession().then(async (session) => {\r\n        // console.log(\"[ZJUAM] Fetching login page.\");\r\n\r\n        const login_html = (await session\r\n          .fetch(login_url)\r\n          .then((res) => {\r\n            return res.text();\r\n          })\r\n          .catch((e) => {\r\n            reject({\r\n              message: \"Failed when fetch login page at first time.\",\r\n            });\r\n            return;\r\n          })) as string;\r\n\r\n        // console.log(login_html);\r\n\r\n        const execution =\r\n          login_html.match(/name=\"execution\" value=\"([^\"]+)\"/)?.[1] ?? \"\";\r\n\r\n        if (!execution) {\r\n          reject({\r\n            message: \"First-time login page doesn't contain execution string.\",\r\n          });\r\n        }\r\n\r\n        // console.log(execution);\r\n\r\n        const pubkey = (await session\r\n          .fetch(pubkey_url)\r\n          .then((res) => res.json())\r\n          .catch((e) => {\r\n            reject({\r\n              message: \"Failed when fetch pubkey.\",\r\n            });\r\n          })) as {\r\n          modulus: string; // hex\r\n          exponent: string;\r\n        };\r\n\r\n        // console.log(pubkey);\r\n\r\n        // Encrypt password using node crypto\r\n        // var key = new RSAUtils.getKeyPair(pubkey.exponent, \"\", pubkey.modulus);\r\n        // const reversedPwd = this.password.split(\"\").reverse().join(\"\");\r\n        const key = rsaEncrypt(this.password, pubkey.exponent, pubkey.modulus);\r\n\r\n        // console.log(key);\r\n\r\n        // if (!key) {\r\n        //   reject({\r\n        //     message: \"Fail to encrypt password.\",\r\n        //   });\r\n        // }\r\n\r\n        // throw new Error('Not implemented')\r\n        const login_res = await session\r\n          .fetch(login_url, {\r\n            method: \"POST\",\r\n            body: [\r\n              \"username=\" + this.username,\r\n              \"password=\" + key,\r\n              \"execution=\" + execution,\r\n              \"_eventId=\" + \"submit\",\r\n              \"authcode=\",\r\n            ].join(\"&\"),\r\n            headers: {\r\n              \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n            },\r\n            redirect: \"manual\",\r\n          })\r\n          .then(async (res) => {\r\n            console.log(await res.text());\r\n            // console.log(res.headers.getSetCookie());\r\n            // res.headers.getSetCookie().forEach((cookieStr) => {\r\n            //   const [key, value] = cookieStr.split(\";\")[0].split(\"=\");\r\n            //   this.cookies[key] = value;\r\n            // });\r\n            if (res.status === 302) {\r\n              this.firstinLogin = true;\r\n              console.log(\"[ZJUAM] Login success.\");\r\n              this.iPlanetDirectoryPro = session.extractCookie(\r\n                new URL(\"https://zjuam.zju.edu.cn/cas/login\").origin,\r\n                \"iPlanetDirectoryPro\"\r\n              );\r\n\r\n              resolve(res.headers.get(\"Location\") as string);\r\n            } else if (res.status === 200) {\r\n              const text = (await res.text()) as string;\r\n              const message = text.match(\r\n                /\\<span id=\\\"msg\\\"\\>([^<]+)<\\/span>/\r\n              )?.[1];\r\n              reject({\r\n                message: \"Failed to login: \" + message,\r\n              });\r\n            } else {\r\n              reject({\r\n                message: \"Failed to login with status code \" + res.status,\r\n              });\r\n            }\r\n          });\r\n      });\r\n      // console.log(login_res);\r\n    });\r\n  }\r\n\r\n  login() {\r\n    return this.#_login(\"https://zjuam.zju.edu.cn/cas/login\");\r\n  }\r\n\r\n  async fetch(url: string, options: RequestInit = {}) {\r\n    if (this.firstinLogin) {\r\n      await this.login().catch((e) => {\r\n        console.error(e);\r\n      });\r\n    }\r\n    // console.log(this.cookies);\r\n\r\n    options.headers = {\r\n      ...options.headers,\r\n      // Cookie: Object.entries(this.cookies)\r\n      //   .map(([key, value]) => `${key}=${value}`)\r\n      //   .join(\"; \"),\r\n      Cookie: `iPlanetDirectoryPro=${this.iPlanetDirectoryPro}`,\r\n      \"User-Agent\":\r\n        \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36 Edg/131.0.0.0\",\r\n    };\r\n    // console.log(options);\r\n\r\n    return fetch(url, options);\r\n  }\r\n\r\n  async loginSvc(service: string): Promise<string> {\r\n    console.log(\"[ZJUAM] Attempting to login to service: \" + service);\r\n    \r\n\r\n    const fullLoginStr =\r\n      \"https://zjuam.zju.edu.cn/cas/login?service=\" +\r\n      encodeURIComponent(service);\r\n    if (this.firstinLogin) {\r\n      return await this.fetch(fullLoginStr, {\r\n        redirect: \"manual\",\r\n        method: \"GET\",\r\n      }).then((res) => {\r\n        // console.log(\"loginSvc,\",res.status,res.headers.get(\"Location\"));\r\n\r\n        if (res.status == 302) {\r\n          return res.headers.get(\"Location\") as string;\r\n        } else if (res.status == 200) {\r\n          return this.#_login(fullLoginStr);\r\n        }\r\n        return Promise.reject({\r\n          message: \"Login failed with status \" + res.status,\r\n        });\r\n      });\r\n    } else {\r\n      return this.#_login(fullLoginStr);\r\n    }\r\n  }\r\n\r\n  async loginSvc_oauth2(fullURL: string) {\r\n    console.log(\"[ZJUAM] Attempting to login to oauth2 service: \" + fullURL);\r\n\r\n    if (this.firstinLogin) {\r\n      await this.login().catch((e) => {\r\n        console.error(e);\r\n      });\r\n    }\r\n\r\n    return createFetchSession().then(async (session) => {\r\n      session.injectCookie(\r\n        new URL(fullURL).origin,\r\n        \"iPlanetDirectoryPro\",\r\n        this.iPlanetDirectoryPro\r\n      );\r\n      return session\r\n        .fetch(fullURL, {\r\n          // https://zjuam.zju.edu.cn/cas/oauth2.0/authorize?response_type=code&client_id=ObXIv4FvjcC1e9hVcS&redirect_uri=http://tgmedia.cmc.zju.edu.cn/index.php?r=auth/get-info&url=https://classroom.zju.edu.cn/\r\n          redirect: \"manual\",\r\n        })\r\n        .then((res) => {\r\n          if (res.status == 302) {\r\n            return res.headers.get(\"Location\") as string;\r\n          } else{\r\n            throw new Error(\"Login failed with status \" + res.status);\r\n          }\r\n        })\r\n        .then((location) => {\r\n          // things like https://zjuam.zju.edu.cn/cas/login?service=http%3A%2F%2Fzjuam.zju.edu.cn%2Fcas%2Foauth2.0%2FcallbackAuthorize\r\n          return session.fetch(location!, {\r\n            redirect: \"manual\",\r\n          });\r\n        })\r\n        .then((res) => {\r\n          if (res.status == 302) {\r\n            return res.headers.get(\"Location\") as string;\r\n          } else {\r\n            throw new Error(\"Login failed with status \" + res.status);\r\n          }\r\n        })\r\n        .then((location) => {\r\n          // things like https://zjuam.zju.edu.cn/cas/oauth2.0/callbackAuthorize?ticket=ST-yyyyyyy-xxxxxxxxxxxxxxxxxxxxxxxx\r\n          return session.fetch(location!, {\r\n            redirect: \"manual\",\r\n          });\r\n        })\r\n        .then((res) => {\r\n          if (res.status == 302) {\r\n            return res.headers.get(\"Location\") as string;\r\n          } else {\r\n            throw new Error(\"Login failed with status \" + res.status);\r\n          }\r\n        }); //final           http://tgmedia.cmc.zju.edu.cn/index.php?r=auth/get-info&code=ST-xxxxxxxxx\r\n    });\r\n  }\r\n}\r\n\r\nexport { ZJUAM };\r\n", "// \u5B66\u5728\u6D59\u5927 course.zju.edu.cn\r\n\r\nimport type { ZJUAM } from \"./zjuam\";\r\n\r\nclass COURSE {\r\n  zjuamInstance: ZJUAM;\r\n  cookies: { [key: string]: string };\r\n  constructor(am: ZJUAM, mode: \"WEB\" | \"APP\") {\r\n    this.zjuamInstance = am;\r\n    this.cookies = {};\r\n  }\r\n  token: string = \"\";\r\n  session: string;\r\n\r\n  async login() {\r\n    const callbackURL = await this.zjuamInstance.loginSvc(\r\n      \"https://course.zju.edu.cn/ua/login?platform=WEB\"\r\n    );\r\n\r\n    console.log(callbackURL);\r\n\r\n    await fetch(callbackURL, {\r\n      redirect: \"manual\",\r\n    })\r\n      .then((res) => {\r\n        console.log(res.status);\r\n        console.log(res.headers.getSetCookie());\r\n        res.headers.getSetCookie().forEach((cookieStr) => {\r\n          const [key, value] = cookieStr.split(\";\")[0].split(\"=\");\r\n          this.cookies[key] = value;\r\n        });\r\n        return res.headers.get(\"Location\");\r\n      })\r\n      .then((location) => {\r\n        return fetch(location!, {\r\n          redirect: \"manual\",\r\n          headers: {\r\n            Cookie: Object.entries(this.cookies)\r\n              .map(([key, value]) => `${key}=${value}`)\r\n              .join(\"; \"),\r\n          },\r\n        });\r\n      })\r\n      .then((res) => {\r\n        console.log(res.status);\r\n        console.log(res.headers.getSetCookie());\r\n        // res.headers.getSetCookie().forEach((cookieStr) => {\r\n        //     const [key, value] = cookieStr.split(\";\")[0].split(\"=\");\r\n        //     this.cookies[key] = value;\r\n        // });\r\n        console.log(res.headers.get(\"Location\"));\r\n        this.token = new URL(res.headers.get(\"Location\")!).searchParams.get(\r\n          \"token\"\r\n        ) as string;\r\n        // console.log(this.token);\r\n        return fetch(res.headers.get(\"Location\")!, {});\r\n      })\r\n      .then((res) => {\r\n        console.log(res.status);\r\n        console.log(res.headers.getSetCookie());\r\n        // res.headers.getSetCookie().forEach((cookieStr) => {\r\n        //     const [key, value] = cookieStr.split(\";\")[0].split(\"=\");\r\n        //     this.cookies[key] = value;\r\n        // });\r\n        console.log(res.headers.get(\"Location\"));\r\n      });\r\n  }\r\n}\r\n\r\nexport { COURSE };\r\n", "import type { ZJUAM } from \"./zjuam\";\r\n\r\nconst service = \"https://form.zju.edu.cn/\";\r\n\r\nclass FORM {\r\n  token: string = \"\";\r\n  zjuamInstance: ZJUAM;\r\n  constructor(am: ZJUAM) {\r\n    this.zjuamInstance = am;\r\n  }\r\n  async login() {\r\n    console.log(\"[FORM] login begins\");\r\n    return this.zjuamInstance\r\n      .loginSvc(service)\r\n      .then((callbackURL) => {\r\n        const ticket = callbackURL.split(\"ticket=\")[1].split(\"&\")[0];\r\n        return fetch(\r\n          `https://form.zju.edu.cn/dfi/validateLogin?ticket=${ticket}&service=${encodeURIComponent(\r\n            service\r\n          )}`\r\n        );\r\n      })\r\n      .then((r) => r.json())\r\n      .then((r) => {\r\n        // console.log(r);\r\n        if (r.code === 2000) {\r\n          console.log(\"[FORM] login success\");\r\n          this.token = r.data.token;\r\n          return true;\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        throw e;\r\n      });\r\n  }\r\n\r\n  async fetch(url: string): Promise<Response> {\r\n    if (this.token === \"\") {\r\n      await this.login();\r\n    }\r\n    try {\r\n      const res = await fetch(url!, {\r\n        headers: {\r\n            authentication: this.token,\r\n        },\r\n      });\r\n      if (res.status === 200) {\r\n        return res;\r\n      } else {\r\n        if (res.status === 401 || res.status === 403) {\r\n          this.token = \"\";\r\n          return this.fetch(url);\r\n        }\r\n        throw new Error(`Request failed with status ${res.status}`);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Fetch error:\", error);\r\n\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport { FORM };\r\n", "import { createFetchSession } from \"./utils/fetch-utils\";\r\nimport type { ZJUAM } from \"./zjuam\";\r\n\r\nclass CLASSROOM {\r\n  zjuamInstance: ZJUAM;\r\n  token: string;\r\n  constructor(am: ZJUAM) {\r\n    this.zjuamInstance = am;\r\n    this.token = \"\";\r\n  }\r\n\r\n  async login() {\r\n    console.log(\r\n      \"[CLASSROOM] Attempting to login to classroom.zju.edu.cn\"\r\n    );\r\n\r\n    return createFetchSession().then(async (session) => {\r\n      await session\r\n        .fetch(\r\n          \"https://tgmedia.cmc.zju.edu.cn/index.php?r=auth%2Flogin&forward=https%3A%2F%2Fclassroom.zju.edu.cn%2F\",\r\n          {\r\n            redirect: \"manual\",\r\n          }\r\n        )\r\n        .then(async (response) => {\r\n          if (response.status === 302) {\r\n            return response.headers.get(\"Location\") as string;\r\n          } else {\r\n            throw new Error(\"Failed to login\");\r\n          }\r\n        })\r\n        .then(async (redirectUrl) => {\r\n          // things like                 https://zjuam.zju.edu.cn/cas/oauth2.0/authorize?response_type=code&client_id=Oaaaaaaaaaaaaaaa&redirect_uri=http://tgmedia.cmc.zju.edu.cn/index.php?r=auth/get-info&url=https://classroom.zju.edu.cn/\r\n          return this.zjuamInstance.loginSvc_oauth2(redirectUrl);\r\n        })\r\n        .then(async (callbackURL) => {\r\n          /*\r\n           *    Here there is a redirect\r\n           *\r\n           *     -> http://tgmedia.cmc.zju.edu.cn/index.php?r=auth/get-info&code=ST-2848273-yrnApl2GCwUZrd6ErCXt-zju.edu.cn\r\n           *     -> https://tgmedia.cmc.zju.edu.cn/index.php?r=auth/get-info&code=ST-2848273-yrnApl2GCwUZrd6ErCXt-zju.edu.cn\r\n           *     -> https://classroom.zju.edu.cn\r\n           *\r\n           *     That is stupid. I'm not sure will we follow it or the behavior will change.\r\n           */\r\n\r\n          if (callbackURL.startsWith(\"http://\")) {\r\n            callbackURL = callbackURL.replace(\"http://\", \"https://\");\r\n          }\r\n\r\n          return session\r\n            .fetch(callbackURL, {\r\n              redirect: \"manual\",\r\n            })\r\n            .then(async (response) => {\r\n              if (response.status === 302) {\r\n                return response.headers.get(\"Location\") as string;\r\n              } else {\r\n                throw new Error(\"Failed to login\");\r\n              }\r\n            });\r\n        });\r\n\r\n      const token = decodeURIComponent(\r\n        session.extractCookie(\r\n          new URL(\"https://tgmedia.cmc.zju.edu.cn/\").origin,\r\n          \"_token\"\r\n        )\r\n      );\r\n      // console.log(token);\r\n      // 784834b3512089de67d5438a50f8cf416a32e42e93f9cad734cb06f11e2cbb81a:2:{i:0;s:6:\"_token\";i:1;s:677:\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2N*********************************************************oxMTJ9.BPC15h1zPU3*************************FWUCehA\";}\r\n\r\n      // I'm using pattern match to parse the token. We need the JWT part.\r\n      // We must assure the format of the token is consistent.\r\n\r\n      // !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n      // This part is down once the format of token is changed!\r\n      // Once the code failed to run. Inspect it!!!!!!\r\n      this.token = token\r\n        .split(\":\")\r\n        .filter((c) => c.startsWith('\"ey'))[0]\r\n        .split('\"')[1];\r\n      // !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n\r\n      return;\r\n    });\r\n  }\r\n\r\n  async fetch(url: string, options: RequestInit = {}) {\r\n    if (!this.token || this.token.length === 0) {\r\n      await this.login();\r\n    }\r\n\r\n    const headers = {\r\n      ...options.headers,\r\n      Authorization: `Bearer ${this.token}`,\r\n    };\r\n\r\n    return fetch(url, {\r\n      headers,\r\n    });\r\n  }\r\n}\r\n\r\nexport { CLASSROOM };\r\n"],
  "mappings": "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",
  "names": ["Cookie_pool", "fetchWithCookie", "url", "options", "host", "key", "value", "response", "cookie", "fetch_with_cookie_default", "fetchWithCookie", "COURSES", "am", "fetch_with_cookie_default", "res", "callbackUrl", "url", "options", "session", "ZDBK", "am", "callbackURL", "res", "cookieStr", "key", "value", "createFetchSession", "cookiePool", "resolve", "url", "options", "origin", "key", "value", "res", "cookie", "cookieName", "cookieValue", "rsaEncrypt", "passwd", "exponent", "nHex", "pwd", "c", "n", "e", "pubkey_url", "ZJUAM", "username", "password", "#_login", "login_url", "resolve", "reject", "createFetchSession", "session", "execution", "res", "e", "pubkey", "pubkey_url", "key", "rsaEncrypt", "login_res", "message", "url", "options", "service", "fullLoginStr", "fullURL", "location", "COURSE", "am", "mode", "callbackURL", "res", "cookieStr", "key", "value", "location", "service", "FORM", "am", "callbackURL", "ticket", "r", "e", "url", "res", "error", "CLASSROOM", "am", "createFetchSession", "session", "response", "redirectUrl", "callbackURL", "token", "c", "url", "options", "headers"]
}
